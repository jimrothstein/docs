---
title: "250_quarto_cheat.qmd "
author: "JR"
date: today 
pdf-engine: lualatex
#format:  revealjs       # works, but only one format: at a time (?)
format:
    html:
        code-fold: true
        toc: true 
        number-sections: false
        html-math-method: katex
#        css: styles.css
        scss: custom.scss
        embed-resources: true ## if standalone, all 1 file 
        code-block-bg: true            # chunk outputs 
        code-block-border-left: "#31BAE9"       
        indent: true
        code-link: true             # hyperlink R functions
        reference-location: margin
output-dir: docs            ## NO indent, also _quarto.yml for entier project
editor_options: 
  chunk_output_type: console
execute: 
  error: true                   ## include errors in output
  warning: true
  collapse: true
  standalone: true
editor: 
  markdown: 
    wrap: 72
---

```{r, setup, include=FALSE}
knitr::opts_chunk$set(
  comment = '', fig.width = 6, fig.height = 6, collapse = TRUE
)
```

## Preliminaries
::: callout
KEEP as QUARTO .qmd file (to learn to decorate)
RStudio also - easy to post completed quarto to Posit Cloud
:::


REF

- Mimi - quarto, some CSS, SCSS (see her actual code):      https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/ \
- Themes, SASS:  https://quartoand.me/front-end \
- SASS R pkg:  https://cran.r-project.org/web/packages/sass/vignettes/sass.html \
- Quarto Themes + modify with SCSS:   https://quarto.org/docs/output-formats/html-themes.html#basic-options \ 

"Sass theme files can define both variables that globally set things
like colors and fonts, as well as rules that define more fine grained
behavior. To customize an existing Bootstrap theme with your own set
of variables and/or rules, just provide the base theme and then your
custom theme file(s):"




```         
PURPOSE: Collect misc stuff related to quarto and HTML

- quarto 
- css, SCSS
- revealjs   (SEE:  examples in code_publish)
- HTML
```


## Pandoc only (cli) - pdf,  \footenotesize
To render ascii document with small font (for printing):

- in <file>, use ```  for verbatum
- very top:   \footenotesize
- pandoc -f  markdown -o out.pdf <file>
- pandoc -f  markdown -V geometry:margin=2cm -o out.pdf <file>


## Pandoc only (cli) - html, embed :::small-font  (need SCSS)
- need example, not tried yet

### Why use Rstudio?

-   Visual Mode = menu driven, simplifies decorattion
-   Renders automatically.


## Quarto -  basics

markdown does NOT offer all tools (ex: change color)
best to avoid direct HTML insertion, use tools:

-   knitr:: can be useful functions:
    <https://cran.r-project.org/web/packages/knitr/knitr.pdf>

-   rmarkdown cookbook: <https://bookdown.org/yihui/rmarkdown-cookbook/>

-   markdown:: adds to rmarkdown: <link>

-   Mimi: videos

-   Pandoc's version of markdown: <link>

-   Bootstrap: predefined `class`
    <https://getbootstrap.com/docs/3.4/css/#helper-classes>

### quarto examples
- ~/code/try_things_here/envir/9009_namespace

### Run quarto (CLI) create project to create any quarto project, including slides with revealjs.

For revealjs, choose presentation when create document (in Rstudio)

### Quarto - markup, callouts

[underline text, where defined?]{.underline} 

[text with border, defined?]{.border}

### Create a footnote:

Need footnote one here: [^1]

[^1]: This is footnote one.

::: {.content-visible when-format="html"}
:::

::: callout-note
A callout note
:::


::: aside
Date: Set programmatically?
:::

::: aside
keep a secret? USE {.hidden}

::: hidden
This is secret
:::


```{r}
knitr::knit_exit()
```
## CSS vs SCSS

-   Include few examples with CSS in-line
-   But shift to external SCSS generally.
-   Avoid external \*.css files

Quarto looks to \_quarto.yml in current dir, in parent ... This

takes dominance over any scsc file in yaml in the .qmd file.



------------------------------------------------------------------------

### Quarto & CSS \| SCSS (see \_quarto.yml cosmo + custom.scss)

(need more content)

## CSS (mostly)

### CSS in-line examples.

::: myDiv
PURPOSE: Collect of HTML and PDF inline commands to control output
:::

in YAML, use `date`, fails in YAML: `r format(Sys.time(), '%d %B %Y')`

```         
in chunks: - OLD: `{r style="xxx"; class=""} 
- NEW`{r .name } where .name is defined in .CSS or .SCSS 
```

:::{.greybox}
-   Div Examples, defined in prior CSS block as `greybox`
:::

-   `div` means container

------------------------------------------------------------------------

### Custom Blocks (rmarkdown-9.6)

::: aside
An aside
:::
