[
  {
    "objectID": "400_rlang_proposal.html",
    "href": "400_rlang_proposal.html",
    "title": "tech notes",
    "section": "",
    "text": "I’ve tried a few times to work through metaprogramming in R and each time became discouraged when I reach a concept that does not appear difficult but example code in R leaves me puzzled.\n(Example: Why isn’t x a symbol. When does quote() return a string and when not?)\nOthers may not have this problem or simply accept it and move on.\n\n\n\nBreak down some of the ideas (ex: data masking) into clearer definitions. Separate the idea from R code. Use terminology with examples (and counter-examples) that illustrate an idea. The guide will be a list of terms, definitions , example code and then links.\nExample: Code block in this Wikipedia article, beginning with ‘apples=4’, shows what string interpolation is and what is not string interpolation.\nBefore introducing the rlang solution, show why base R is not sufficient. Add simple graphs to illustrate ideas.\nNot write a book or reinvent anything. Link to R manuals, rlang documentation, stackoverflow, articles written by others. However, this guide should have very simple code to clarify the idea or problem.\n\n\n\nI do not know Lisp, but it appears R implements a number of ideas from Lisp. Sometimes I benefit from reading wikipedia and then try to figure out the what the R code is doing under the hood.\n\n\n\nDoubt I will finish it. Because I’ll get stuck and refuse to move on. (not the best career trait) If there is another person in our group able and willing to puzzle out some of these things, it could work out nicely. In any event, I am sure that even a list of terms, with few introductory links, will give the next group something to pick up."
  },
  {
    "objectID": "400_rlang_proposal.html#proposal-develop-a-short-guide-to-concepts-examples-definitions-used-by-rlang",
    "href": "400_rlang_proposal.html#proposal-develop-a-short-guide-to-concepts-examples-definitions-used-by-rlang",
    "title": "tech notes",
    "section": "",
    "text": "I’ve tried a few times to work through metaprogramming in R and each time became discouraged when I reach a concept that does not appear difficult but example code in R leaves me puzzled.\n(Example: Why isn’t x a symbol. When does quote() return a string and when not?)\nOthers may not have this problem or simply accept it and move on.\n\n\n\nBreak down some of the ideas (ex: data masking) into clearer definitions. Separate the idea from R code. Use terminology with examples (and counter-examples) that illustrate an idea. The guide will be a list of terms, definitions , example code and then links.\nExample: Code block in this Wikipedia article, beginning with ‘apples=4’, shows what string interpolation is and what is not string interpolation.\nBefore introducing the rlang solution, show why base R is not sufficient. Add simple graphs to illustrate ideas.\nNot write a book or reinvent anything. Link to R manuals, rlang documentation, stackoverflow, articles written by others. However, this guide should have very simple code to clarify the idea or problem.\n\n\n\nI do not know Lisp, but it appears R implements a number of ideas from Lisp. Sometimes I benefit from reading wikipedia and then try to figure out the what the R code is doing under the hood.\n\n\n\nDoubt I will finish it. Because I’ll get stuck and refuse to move on. (not the best career trait) If there is another person in our group able and willing to puzzle out some of these things, it could work out nicely. In any event, I am sure that even a list of terms, with few introductory links, will give the next group something to pick up."
  }
]