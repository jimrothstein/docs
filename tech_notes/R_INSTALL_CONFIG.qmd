---
title: "R Definitions"
date: \today 
pdf-engine: lualatex
format:   
  pdf:
    toc: false 
    number-sections: false
    colorlinks: true
#   one of two ways, other is reference tex file
    include-in-header:
      text:  |
        \usepackage[top=.3in, bottom=.3in, left=.5in, right=.5in]{geometry}
        \usepackage{amsmath,amssymb,amstext,amsfonts}
        \usepackage{lipsum}
        \usepackage{blindtext}
        \usepackage{helvet}  
        \usepackage{ulem}
        \usepackage{setspace}
        \onehalfspacing
        \linespread{1}
    highlight-style: zenburn
fontsize: 10pt   
---
***
<!--
file <- "R_INSTALL_CONFIG.qmd"

PURPOSE:    R Installation - my notes 

      :!quarto render %
-->

\footnotesize{this is footnotesize}
file <- "R_INSTALL_CONFIG.qmd"

\renewcommand{\familydefault}{\sfdefault}  
\section{R Install Directions(TERSE)}
-   Refer to r-project webpage for installation, from packages or binaries.
-   No need to compile myself.
-   may need to add repo, sudo nvim /etc/...
-   sudo apt install  ... only 2-3 packages ~ r-base-***
-   removal is then "easy",  sudo apt remove ....

\section{File locations, ENV VAR}
-   $R-HOME is location of `tree` for R`s binaries, docs, etc.
-   maybe /usr/lib/R  with several directories beneath it.
-   $R LIBS USER is where packages I installed live.   ~/R
-   generically, R/%p/%v
-   $R LIBS SITE is location for R's packages, and may have up ~3 different
    directories
-   USE R at CLI for testing, R --vanilla (no profile, no environ )


\section{.Renviron, .Rprofile}
-   /etc/R/Renviron holds env variable for many R config params  (things like
    pdf viewer)  leave this alone.  Overwrite in user files:

-   ~/.Renviron loads first;  also good place to store `secrets` and access as
    Sys.getenv(' ')


-   ~/.Rprofile is configuration file for R.  pre-load packages, 


\section{clipboard}
-   nvim requires code to connect to system clipboard (apt install xsel), then
    config nvim regislters (see Inndex C)
\section{ install CRAN packages}
-   if updating,  find the installed packages installed.packages()
-   .libPaths() returns locations of all libraries,  only need USER installed
    x = installed.packages()   # what installed now? 
    install.packages(x)  # checkBuilt=TRUE (forces, if package was compiled by
    prior version),  dependencies=F  (install the MINIMUM dependences)

    (update.packages()  - takes a library and updates only those)

    getOption("repos") # what repo/mirror in use
    

###  R update (puzzled) 05/07/2023 
-   inside RStudio, seems to be ok.
-   but from console, seems to balk at a few packages ("MASS, Matrix, Survival""), 
-   !so seems to advice against manually changing permissions.
-   but `install.packages( ..., lib="~/R/x86....")`does not work either.
-   Bottom Line, use RStudio


}

vim:nospell
